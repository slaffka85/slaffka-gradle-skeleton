buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$project.ext.springBootVersion")
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

allprojects {
    apply plugin: "java"
    //apply plugin: "distribution"
    //apply plugin: "application"
    //apply plugin: "spring-boot"
    apply plugin: "io.spring.dependency-management" //use this staff if you don't wanna write everywhere springBootVersion

    version = projectVersion
    group = "com.slaffka"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile("org.springframework:spring-jms:4.2.4.RELEASE")
        compile("org.apache.activemq:activemq-broker:5.12.2")
        //compile("org.springframework.boot:spring-boot-starter-log4j")
/*        testCompile "junit:junit"
        testCompile "org.mockito:mockito-all"
        testCompile "org.assertj:assertj-core"
        compile "org.springframework.boot:spring-boot-starter-test"*/
/*        compile "com.google.guava:guava:16.0.1"
        compile "com.h2database:h2:1.3.175"

        testCompile "junit:junit:4.11"
        testCompile "org.mockito:mockito-all:1.9.5"
        testCompile "org.assertj:assertj-core:1.5.0"*/
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:$project.ext.springBootVersion"
        }
    }
}


project(":persistence") {
    dependencies {
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
       // compile "org.springframework.boot:spring-boot-starter-data-jpa"

        //testCompile project(":webapp")
    }
}




project(":service") {
    apply plugin: "java"
    dependencies {
        compile project(":persistence")

        compile("org.springframework:spring-jms")
        compile("org.apache.activemq:activemq-broker")
        compile("com.fasterxml.jackson.core:jackson-databind:$project.ext.jacksonVersion")
    }
}


project(":rest-facade") {
    apply plugin: "java"

    dependencies {
        //compile "org.springframework.boot:spring-boot-starter-data-jpa"
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }

        //testCompile project(":webapp")
    }

}



project(":webapp") {
    apply plugin: "java"
    apply plugin: "war"
    apply plugin: "spring-boot"
    apply plugin: "distribution"


    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
        compile project(":persistence")
        compile project(":rest-facade")
        compile project(":service")

        compile('javax.servlet:javax.servlet-api')
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        //for live reload
        compile("org.springframework.boot:spring-boot-devtools")
        compile("org.springframework.boot:spring-boot-starter-jetty")
        //uncomment in case you need to monitor performance
        //compile("org.springframework.boot:spring-boot-starter-actuator")

        //rubbish
        //providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
        //compile("org.springframework.boot:spring-boot-starter-amqp");

        //jms support
        compile("org.springframework:spring-jms")
        compile("org.apache.activemq:activemq-broker")
    }

    //i have no idea how to fix it
    distributions {
        main{
            contents {
                into ('bin') {
                    from "src/scripts"
                }
                into ('bin/lib') {
                    from project(':webapp').war
                }

            }
        }
    }
    installDist.dependsOn(bootRepackage)

    //heroku support
    task stage {
        dependsOn bootRepackage
    }
}
/*

project(":integration-test-facade") {
    dependencies {
        //compile "org.springframework.boot:spring-boot-starter-data-jpa"
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile "com.google.guava:guava:16.0.1"
        compile "com.h2database:h2:1.3.175"

        testCompile "junit:junit:4.12"
        //testCompile "org.mockito:mockito-all:1.9.5"
        //testCompile "org.assertj:assertj-core"
        testCompile "org.springframework.boot:spring-boot-starter-test"
        testCompile project(":webapp")
    }
}
*/





