buildscript {
    repositories {
        mavenCentral()
        //mavenLocal()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$project.ext.springBootVersion")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

allprojects {
    apply plugin: "java"
    //apply plugin: "distribution"
    //apply plugin: "application"

    version = projectVersion
    group = "info.rnowak.springBootFun"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        /*compile "org.springframework.boot:spring-boot-starter-test:$project.ext.springBootVersion"*/
/*        compile "com.google.guava:guava:16.0.1"
        compile "com.h2database:h2:1.3.175"

        testCompile "junit:junit:4.11"
        testCompile "org.mockito:mockito-all:1.9.5"
        testCompile "org.assertj:assertj-core:1.5.0"*/
    }
}

project(":persistence") {
    dependencies {
       // compile "org.springframework.boot:spring-boot-starter-data-jpa:$project.ext.springBootVersion"

        //testCompile project(":webapp")
    }
}


project(":webapp") {
    apply plugin: "spring-boot"
    apply plugin: "distribution"
    apply plugin: "java"
    apply plugin: "war"

    dependencies {

        compile project(":persistence")

        compile "org.springframework.boot:spring-boot-starter-web:$project.ext.springBootVersion"
        //for live reload
        compile("org.springframework.boot:spring-boot-devtools:$project.ext.springBootVersion")
        //uncomment in case you need to monitor performance
        //compile("org.springframework.boot:spring-boot-starter-actuator:$project.ext.springBootVersion")
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    }

    distributions {
        main{
            contents {
                into ('bin') {
                    from "src/scripts"
                }
                into ('bin/lib') {
                    from project(':webapp').war
                }

            }
        }
    }
    installDist.dependsOn(bootRepackage)

    task stage {
        dependsOn bootRepackage
    }
}





